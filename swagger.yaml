openapi: 3.0.0
info:
  title: Jobs-API
  contact: {}
  version: "1.0"
servers:
  - url: https://careerspot-api.onrender.com/api/v1
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/RegisterUserRequest"
                - example:
                    name: anna
                    email: anna@gmail.com
                    password: secret
            example:
              name: anna
              email: anna@gmail.com
              password: secret
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login user
      operationId: Loginuser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/LoginuserRequest"
                - example:
                    email: anna@gmail.com
                    password: secret
            example:
              email: anna@gmail.com
              password: secret
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /jobs:
    post:
      tags:
        - Jobs
      summary: Create Job
      operationId: CreateJob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/CreateJobRequest"
                - example:
                    company: Netflix
                    position: SWE
            example:
              company: Netflix
              position: SWE
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    get:
      tags:
        - Jobs
      summary: Get ALL jobs - only for a single user
      operationId: GetALLjobs-onlyforasingleuser
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: the job id
    get:
      tags:
        - Jobs
      summary: Get Single Job
      operationId: GetSingleJob
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - Jobs
      summary: Update Job
      operationId: UpdateJob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UpdateJobRequest"
                - example:
                    company: random
                    position: fontend developer
            example:
              company: random
              position: fontend developer
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - Jobs
      summary: Delete job
      operationId: Deletejob
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
components:
  schemas:
    RegisterUserRequest:
      title: RegisterUserRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: anna
        email: anna@gmail.com
        password: secret
    LoginuserRequest:
      title: LoginuserRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: anna@gmail.com
        password: secret
    CreateJobRequest:
      title: CreateJobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Netflix
        position: SWE
    UpdateJobRequest:
      title: UpdateJobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: random
        position: fontend developer
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: Misc
    description: ""
  - name: Auth
    description: ""
  - name: Jobs
    description: ""
